version: '3.8'

services:
  node_app:
    build:
      context: ./node_app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./node_app:/usr/src/app
      - ./temp:/usr/src/temp
    environment:
      - FLASK_APP_URL=http://flask_app:5000
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=mysql1234
      - DB_NAME=db3
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  flask_app:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./flask_app:/app
      - ./temp:/app/temp
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=mysql1234
      - DB_NAME=db3
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql1234
      MYSQL_DATABASE: db3
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pmysql1234"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
